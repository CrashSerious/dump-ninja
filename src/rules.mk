# Build rules. Each option automatically enables other required options

# CONFIG_WATCHDOG
ifeq ($(CONFIG_WATCHDOG),y)
CFLAGS += -DCONFIG_WATCHDOG
endif

# CONFIG_USBDEV_CDC_CONSOLE
ifeq ($(CONFIG_USBDEV_CDC_CONSOLE),y)
CONFIG_USBDEV_CDC=y
CFLAGS += -DCONFIG_USBDEV_CDC_CONSOLE
CFLAGS += -DCDC_BUFSIZE=16
endif

# CONFIG_USBDEV_CDC
ifeq ($(CONFIG_USBDEV_CDC),y)
CONFIG_USBDEV=y
CFLAGS += -DCONFIG_USBDEV_CDC
SRCS += usbdev_cdc.c
SRCS += $(LUFA_PATH)/LUFA/Drivers/USB/Class/Device/CDC.c            \
        $(LUFA_PATH)/LUFA/Drivers/USB/Class/Host/CDC.c              
endif

# CONFIG_USBDEV_AVRISP
ifeq ($(CONFIG_USBDEV_AVRISP),y)
CONFIG_AVRISP=y
CONFIG_USBDEV=y
CFLAGS += -DCONFIG_USBDEV_AVRISP
SRCS += usbdev_avrisp.c
endif


# CONFIG_USBDEV_JTAG
ifeq ($(CONFIG_USBDEV_JTAG),y)
CONFIG_JTAG=y
CONFIG_USBDEV=y
CFLAGS += -DCONFIG_USBDEV_JTAG
SRCS += usbdev_jtag.c
endif

# CONFIG_JTAG
ifeq ($(CONFIG_JTAG),y)
CONFIG_JTAG=y
CFLAGS += -DCONFIG_JTAG
SRCS += jtag.c
endif

# CONFIG_USBDEV
ifeq ($(CONFIG_USBDEV),y)
# LUFA definitions
BOARD=BOARD_TEENSY
LUFA_PATH = ../third-party/LUFA100513

CFLAGS += -I$(LUFA_PATH)
#CFLAGS  = -D NO_STREAM_CALLBACKS
CFLAGS += -DUSB_DEVICE_ONLY
CFLAGS += -DFIXED_CONTROL_ENDPOINT_SIZE=8
CFLAGS += -DFIXED_NUM_CONFIGURATIONS=1
CFLAGS += -DUSE_FLASH_DESCRIPTORS
CFLAGS += -DUSE_STATIC_OPTIONS="(USB_DEVICE_OPT_FULLSPEED | USB_OPT_REG_ENABLED | USB_OPT_AUTO_PLL)"
CFLAGS += -DBOARD=$(BOARD)

SRCS += usbdev.c

SRCS += \
    $(LUFA_PATH)/LUFA/Drivers/USB/LowLevel/DevChapter9.c        \
    $(LUFA_PATH)/LUFA/Drivers/USB/LowLevel/Endpoint.c           \
    $(LUFA_PATH)/LUFA/Drivers/USB/LowLevel/Host.c               \
    $(LUFA_PATH)/LUFA/Drivers/USB/LowLevel/HostChapter9.c       \
    $(LUFA_PATH)/LUFA/Drivers/USB/LowLevel/LowLevel.c           \
    $(LUFA_PATH)/LUFA/Drivers/USB/LowLevel/Pipe.c               \
    $(LUFA_PATH)/LUFA/Drivers/USB/LowLevel/USBInterrupt.c       \
    $(LUFA_PATH)/LUFA/Drivers/USB/HighLevel/ConfigDescriptor.c  \
    $(LUFA_PATH)/LUFA/Drivers/USB/HighLevel/Events.c            \
    $(LUFA_PATH)/LUFA/Drivers/USB/HighLevel/USBTask.c           \

CFLAGS += -DCONFIG_USBDEV
endif

# CONFIG_HW_UART_CONSOLE
ifeq ($(CONFIG_HW_UART_CONSOLE),y)
CONFIG_HW_UART=y
CFLAGS += -DCONFIG_HW_UART_CONSOLE
endif

# CONFIG_HW_UART
ifeq ($(CONFIG_HW_UART),y)
CFLAGS += -DCONFIG_HW_UART
SRCS += hw_uart.c
endif

# CONFIG_BUS_I2C
ifeq ($(CONFIG_BUS_I2C),y)
CFLAGS += -DCONFIG_BUS_I2C
SRCS += hw_i2c.c bus_i2c.c
endif

# CONFIG_BUS_SPI
ifeq ($(CONFIG_BUS_SPI),y)
CFLAGS += -DCONFIG_BUS_SPI
SRCS += hw_spi.c bus_spi.c
endif

# CONFIG_COMMAND_DUMPKEYS
ifeq ($(CONFIG_COMMAND_DUMPKEYS),y)
CFLAGS += -DCONFIG_COMMAND_DUMPKEYS
endif

# CONFIG_COMMAND_BITBANG
ifeq ($(CONFIG_COMMAND_BITBANG),y)
CFLAGS += -DCONFIG_COMMAND_BITBANG
SRCS += command_bitbang.c
endif

# CONFIG_COMMAND_MENUTEST
ifeq ($(CONFIG_COMMAND_MENUTEST),y)
CFLAGS += -DCONFIG_COMMAND_MENUTEST
endif

# CONFIG_COMMAND_CONFIG_DEBUG_RESET_REASON
ifeq ($(CONFIG_COMMAND_CONFIG_DEBUG_RESET_REASON),y)
CFLAGS += -DCONFIG_COMMAND_CONFIG_DEBUG_RESET_REASON
endif

# CONFIG_COMMAND_SILENT
ifeq ($(CONFIG_COMMAND_SILENT),y)
CFLAGS += -DCONFIG_COMMAND_SILENT
endif

# CONFIG_COMMAND_LOG
ifeq ($(CONFIG_COMMAND_LOG),y)
CFLAGS += -DCONFIG_COMMAND_LOG
endif

# CONFIG_COMMAND_ECHO
ifeq ($(CONFIG_COMMAND_ECHO),y)
CFLAGS += -DCONFIG_COMMAND_ECHO
endif

# CONFIG_COMMAND_TEST
ifeq ($(CONFIG_COMMAND_TEST),y)
CFLAGS += -DCONFIG_COMMAND_TEST
endif

